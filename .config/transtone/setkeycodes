#! /bin/sh
#
# sysfsctl	Set values for things in /sys.
#		Pretty much like sysctl, but for /sys
#

set -e

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="setkeycodes"
NAME=setkeycodes
SCRIPTNAME=/etc/init.d/$NAME

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0


#
#	Function that starts the daemon/service.
#
d_start() {
	# Read config file if it is present.
	if [ -r /etc/conf.d/$NAME ] ; then
		egrep -v '^ *#' /etc/conf.d/$NAME | \
			while read scancode keycode rest ; do
				/usr/bin/setkeycodes "$scancode" $(($keycode))
			done
	fi
}

case "$1" in
  start)
	echo -n "Starting $DESC: $NAME"
	d_start
	echo "."
	;;
  stop)
	echo -n "Stopping $DESC: $NAME"
	echo "."
	;;
  reload)
	#
	#	If the daemon can reload its configuration without
	#	restarting (for example, when it is sent a SIGHUP),
	#	then implement that here.
	#
	#	If the daemon responds to changes in its config file
	#	directly anyway, make this an "exit 0".
	#
	echo -n "Reloading $DESC configuration..."
	d_start
	echo "done."
  ;;
  restart|force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart".
	#
	echo -n "Restarting $DESC: $NAME"
	d_start
	echo "."
	;;
  *)
	# echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 1
	;;
esac

exit 0
